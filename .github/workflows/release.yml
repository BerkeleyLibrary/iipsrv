name: Push Release Tags

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-latest
    outputs:
      base_image: ${{ steps.get-base-image.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine the sha-based image tag to retag
        id: get-base-image
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=sha

      - name: Verify that the image was previously built
        run: docker pull "$BASE_IMAGE"
        env:
          BASE_IMAGE: ${{ steps.get-base-image.outputs.tags }}

  retag:
    runs-on: ubuntu-latest
    needs:
      - verify
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Produce release tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: latest=false
          tags: |
            type=ref,event=tag
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}

      - name: Retag and push the image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=registry,ref=${{ needs.verify.outputs.base_image }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
